<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 数据源配置, 使用 druid 数据库连接池 -->
    <bean id="logindataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${logindb.driverClassName}"/>
        <property name="url" value="${logindb.url}"/>
        <property name="username" value="${logindb.username}"/>
        <property name="password" value="${logindb.password}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${logindb.initialSize}"/>
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${logindb.maxActive}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${logindb.minIdle}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${logindb.maxWait}"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50"/>

    </bean>


    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="loginsqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="logindataSource"/>
        <property name="configLocation" value="classpath:mapper/SecurityMybatisMapper-config.xml"/>
        <property name="mapperLocations"
                  value="classpath*:/mapper/Security/*Mapper.xml"/><!--这里可以在classpath后面加上* 不加上去 pom.xml不能找到这个文件所在  因为这里的文件是未经过编译成class的文件    -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fulln.dao.Security"/>
        <property name="sqlSessionFactoryBeanName" value="loginsqlSessionFactory"/>
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="logintransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="logindataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="logintransactionManager"/>

</beans>
 